[
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Educational Trends in Turkey (2008–2023)",
    "section": "",
    "text": "🚀 Higher Education Attainment Trends (2008–2023)\nKey Insights:\n- The proportion of associate degree, bachelor’s degree, master’s degree, and doctorate graduates aged 25 and above increased significantly from 9.8% in 2008 to 24.6% in 2023.\n- Similarly, the proportion of secondary education and above graduates rose from 26.5% in 2008 to 48.3% in 2023.\nAnalysis:\n- This significant improvement indicates increased access to higher education opportunities in Turkey over the past 15 years.\n- Policy reforms, educational infrastructure improvements, and increased participation of women in higher education likely contributed to this growth.\n- Despite improvements, nearly 75.4% of the population aged 25 and above in 2023 still do not hold a university degree, indicating room for further growth.\nImplications:\n- Policies should focus on bridging regional disparities and supporting economically disadvantaged groups to access higher education.\n- Investments in lifelong learning programs can target the adult population with limited formal education.\n\n\n\n\n\n📚 Average Duration of Education (2023)\nKey Insights:\n- In 2023, the average duration of education for individuals aged 25 and over was 9.3 years. - Gender Gap:\n- Women: 8.6 years\n- Men: 10.1 years\n\n\n\n✅ En Yüksek Ortalama Eğitim Süresi Olan İller:\n           İl Adı  Education_Avg\n1235       Ankara      10.993782\n1263     İstanbul      10.468269\n1255    Eskişehir      10.443567\n1264        İzmir      10.324897\n1306       Yalova      10.249052\n\n✅ En Düşük Ortalama Eğitim Süresi Olan İller:\n           İl Adı  Education_Avg\n1292    Şanlıurfa       8.283931\n1233         Ağrı       8.355252\n1278          Muş       8.625626\n1276       Mardin       8.777682\n1294          Van       8.847596\n\n\n\n\n\n\n\n\n\n\n\n\n✅ En Yüksek Eğitim Süresi Değişim Oranı Olan İller:\n   İl Adı_  Türkiye  Change_Rate\n58         Tekirdağ    29.875646\n76           Yalova    26.885635\n40          Kocaeli    23.671948\n62        Şanlıurfa    23.353189\n78            Kilis    22.174356\n✅ En Düşük Eğitim Süresi Değişim Oranı Olan İller:\n   İl Adı_  Türkiye  Change_Rate\n74          Ardahan    -6.134902\n35             Kars    -2.878420\n3              Ağrı    -2.677055\n65           Yozgat    -2.126473\n43          Malatya    -1.198064\n\n\n\n\n\n\n\n\n\n\n\n\n📈 Literacy Rates (2008–2023)\nKey Insights:\n- The literacy rate among individuals aged 6 years and over increased from 91.8% in 2008 to 97.6% in 2023.\n- Women: Improved from 86.9% to 96.0%.\n- Men: Improved from 96.7% to 99.2%.\nAnalysis:\n- The significant improvement in women’s literacy rates suggests a successful reduction in gender disparity in education.\n- Despite the progress, the remaining 4% illiteracy rate among women indicates persistent cultural and socio-economic barriers in certain regions.\nImplications:\n- Adult literacy programs targeting women in rural and underserved areas remain critical.\n- Efforts should focus on ensuring literacy for the remaining 4% of the population, particularly women in remote areas.\n\n\n\n\n\n👩‍🎓👨‍🎓 Parental Education Influence\nKey Insights: - Mothers with Higher Education:\n- 84.6% of their children completed higher education.\n- 12.5% completed secondary education.\n- 2.9% completed lower secondary education. - Fathers with Higher Education:\n- 80.2% completed higher education.\n- 16.0% completed secondary education.\n- 3.8% completed lower secondary education.\nParents with Secondary Education:\n- Mothers: 64.3% attained higher education.\n- Fathers: 55.4% attained higher education.\nParents with Lower Secondary Education:\n- Mothers: 27.9% attained higher education.\n- Fathers: 26.6% attained higher education.\nAnalysis:\n- There is a strong correlation between parental education levels and children’s educational outcomes. - Mothers’ education level appears to have a slightly stronger influence than fathers’.\nImplications:\n- Supporting parental education initiatives can break the cycle of low educational attainment.\n- Programs targeting parents in low-education regions could indirectly improve children’s education levels.\n\n\n\n📝 General Recommendations\n\nFocus on Regional Disparities: Prioritize investment in provinces with lower education durations.\nClose the Gender Gap: Launch gender-specific education campaigns.\nAdult Education Programs: Expand literacy and education programs.\nParental Education Awareness: Implement campaigns for parental influence in education.\nSustain Urban Improvements: Emphasize lifelong learning programs.\n\nConclusion: Significant progress has been made, but regional disparities, gender gaps, and parental influence remain key areas for intervention. A strategic, inclusive approach will drive sustainable improvements in Turkey’s education landscape.\n\n\n                                                \n\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Team Education Atlas",
    "section": "",
    "text": "Welcome to our project webpage. We are team Education Atlas and we are exploring Turkey’s education data.\nPlease stay tuned to follow our project activities.\n\n\nTeam Members\n\nMelis Atay\nMuammer Tiryaki\nSerap Tunç\n\n\n\nProject Topic\nThis project was conducted by considering the education data of TÜİK between 2008 and 2023. It focuses on examining the relationship between education attainment levels and population distribution in Turkey over time with a specific comparison. The analysis involves cleaning and preparing the dataset, identifying key trends, and visualizing population percentages by gender and education level using intuitive graphics. The project provides insights into changes in educational attainment patterns for men and women over the years. It slices the data by gender, year, and region, providing visual comparisons of population distributions across education levels. As a result, this project provides a comprehensive view of how educational attainment has changed over the years, providing valuable insights into societal progress and highlighting areas where further improvement is needed.\n\n\nData Set\nEducation Data Set 1\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "1. General Information About Data\nThe Turkish Statistical Institute (TÜİK) is motivated to ensure the production, publication and distribution of necessary statistics while compiling Turkey’s education data and information. TÜİK collects data from individuals, households, workplaces through surveys and censuses. The education data it collects helps to compare education information and gives an idea of ​​what education needs a country has for its development.\nData Source: TÜİK\n\n\n2. Why We Choose Data and Our Purposes\nAs part of the EMU430 course, we decided to examine the National Education Statistics dataset published by the Turkish Statistical Institute (TÜİK). This dataset provides comprehensive information about the state of education in Turkey. It is particularly suitable for analyzing issues such as reading rates, gender differences in education, and regional education levels.\nEducation plays a key role in the development of a society. Therefore, by choosing this dataset for our project, we aim to determine the strengths of Turkey’s education system and areas that need improvement. We plan to make important inferences about education with this data.\nThe main goal of our project is to conduct an in-depth analysis of the state and trends of education in Turkey. In this context, we will seek answers to the following questions:\nAre there differences in education levels between genders? Has education equality been achieved regionally? How has the level of education in Turkey progressed over the years?\nBy answering these questions, we aim to understand the problems in the education system and develop suggestions that can contribute to education policies in Turkey.\n\n\n3. Data Preprocessing and EDA Analysis\n\ntitle: “Data Preprocessing Report” author: “Education Atlas” date: today format: html: toc: true toc-depth: 2 code-fold: true code-summary: “Code Details” execute: echo: true warning: false error: true\n\n\n\n📊 Introduction\nThis project aims to analyze educational data from 2008 to 2023. The following preprocessing steps prepare the dataset for analysis:\n\nData loading and removal of empty columns\n\nPartitioning data by years\n\nColumn header adjustment\n\nCreating multi-level column headers\n\n\n\n\n🛠️ Step 0: Manual Data Preprocessing in Excel\nBefore starting data analysis, the dataset was manually cleaned in Excel to ensure consistency and accuracy:\n\nEmpty Columns Removed: Completely empty columns were deleted.\nCity Name Standardization: Inconsistent city names (e.g., Afyonkarahisar → Afyon, İçel → Mersin) were corrected.\nUnnecessary Rows Cleared: Rows containing summary totals (e.g., labeled as Türkiye) and metadata were removed.\nHeader Adjustments: Column headers were standardized, and missing values were filled.\n\nThis cleaned dataset (yıllara_göre_egitim.xlsx) was then used for further processing in Python. 🚀\n\n\n⚙️ Step 1: Data Loading and Cleaning\nThe dataset is loaded using Python’s pandas library, and completely empty columns are removed.\nimport pandas as pd\n\n# Load the dataset and remove completely empty columns\ndf = pd.read_excel('data/yıllara_göre_egitim.xlsx')\ndf = df.dropna(axis=1, how='all')\nDescription:\n- The dataset is loaded using the pandas library.\n- Completely empty columns are removed from the dataset.\n\n\n\n📅 Step 2: Partitioning Data by Years\nThe dataset is partitioned into separate data frames for each year.\n# Define years and index ranges\nyears = list(range(2008, 2024))  # From 2008 to 2023\nindex_ranges = [(1 + i * 82, 1 + (i + 1) * 82) for i in range(len(years))]\n\n# Create sub-data frames for each year\nyearly_data = {}\nfor year, (start, end) in zip(years, index_ranges):\n    yearly_data[year] = df.iloc[start:end]\nDescription:\n- The dataset is partitioned into yearly data frames.\n- Index ranges are calculated for each year.\n\n\n\n🔍 Step 3: Viewing Sample Years\nSample records from the first three years are examined.\n# Inspect sample data frames from the first few years\nsample_years = {year: data.head(1) for year, data in list(yearly_data.items())[:3]}\n\n# Display sample data for verification\nfor year, sample in sample_years.items():\n    print(f\"Sample data for year {year}:\")\n    print(sample)\nDescription:\n- Data frames for the first three years are inspected.\n- Header structure is validated.\n- Sample data from the first row of each year’s data frame is displayed.\n\n\n\n📝 Step 4: Adjusting Column Headers\nThe first two rows are used as column headers, and missing values are filled.\nimport pandas as pd\ndf = pd.read_excel('data/yıllara_göre_egitim.xlsx')\ndf = df.dropna(axis=1, how='all')\nyears = list(range(2008, 2024))  # From 2008 to 2023\nindex_ranges = [(1 + i * 82, 1 + (i + 1) * 82) for i in range(len(years))]\n\n# Create sub-data frames for each year\nyearly_data = {}\nfor year, (start, end) in zip(years, index_ranges):\n    yearly_data[year] = df.iloc[start:end]\n# Use the first two rows as headers and fill missing values\nheader1 = df.iloc[0].bfill()\nheader2 = df.iloc[1].bfill()\n\n# Create multi-level (MultiIndex) headers\ndf.columns = pd.MultiIndex.from_tuples(zip(header1, header2))\n\n# Remove the first two rows and reset the dataset\ndf = df.iloc[2:].reset_index(drop=True)\nDescription:\n- The first two rows are used as column headers.\n- Missing values are filled (bfill).\n- Multi-level headers are created.\n\n\n\n📑 Step 5: Structuring Column Headers\nColumn headers are further structured.\n\n\nCode Details\nimport pandas as pd\ndf = pd.read_excel('data/yıllara_göre_egitim.xlsx')\ndf = df.dropna(axis=1, how='all')\nyears = list(range(2008, 2024))  # From 2008 to 2023\nindex_ranges = [(1 + i * 82, 1 + (i + 1) * 82) for i in range(len(years))]\n\n# Create sub-data frames for each year\nyearly_data = {}\nfor year, (start, end) in zip(years, index_ranges):\n    yearly_data[year] = df.iloc[start:end]\n# Use the first two rows as headers and fill missing values\nheader1 = df.iloc[0].bfill()\nheader2 = df.iloc[1].bfill()\n\n# Create multi-level (MultiIndex) headers\ndf.columns = pd.MultiIndex.from_tuples(zip(header1, header2))\n\n# Remove the first two rows and reset the dataset\ndf = df.iloc[2:].reset_index(drop=True)\n# Create single-level headers for the first three columns\nfirst_three_headers = ['Year', 'Province Code', 'Province Name']\n\n# Define main and sub-headers\nmain_headers = [\n    'Genel toplam', 'Okuma yazma bilmeyen', 'Okuma yazma bilen fakat bir okul bitirmeyen',\n    'İlkokul', 'İlköğretim', 'Ortaokul ve dengi meslek', 'Lise ve dengi meslek',\n    'Yüksekokul veya fakülte', 'Yüksek lisans', 'Doktora', 'Bilinmeyen'\n]\nsub_headers = ['Toplam', 'Erkek', 'Kadın']\n\n# Create multi-level headers\nremaining_headers = [(main, sub) for main in main_headers for sub in sub_headers]\n\n# Combine all headers\nfinal_headers = first_three_headers + remaining_headers[:df.shape[1] - len(first_three_headers)]\n\ndf.columns = pd.MultiIndex.from_tuples(\n    [(header, '') if isinstance(header, str) else header for header in final_headers]\n)\n\n\nDescription:\n- Single-level headers are assigned to the first three columns.\n- Multi-level headers are created for remaining columns.\n- Final column structure is established.\n\n\n\n📊 Step 6: Data Structure Verification\n# Display dataset information\nprint(df.info())\n\n# Display the first few rows of the dataset\nprint(df.head())\n\n\nCode Details\nimport pandas as pd\n\n# Veri setini yükle ve tamamen boş sütunları kaldır\ndf = pd.read_excel('/home/mami/emu430/emu430-fall2024-team-education_atlas/data/yıllara_göre_egitim.xlsx')\ndf = df.dropna(axis=1, how='all')\n\n# Yılları ve indeks aralıklarını tanımla\nyears = list(range(2008, 2024))  # 2008'den 2023'e kadar\nindex_ranges = [(1 + i * 82, 1 + (i + 1) * 82) for i in range(len(years))]\n\n# Her yıl için alt veri çerçevelerini oluştur\nyearly_data = {}\nfor year, (start, end) in zip(years, index_ranges):\n    yearly_data[year] = df.iloc[start:end]\n\n# İlk birkaç yılın veri çerçevelerini kontrol et\nsample_years = {year: data.head(1) for year, data in list(yearly_data.items())[:3]}\n\n# İlk iki satırı başlık olarak kullan ve eksik değerleri doldur\nheader1 = df.iloc[0].bfill()\nheader2 = df.iloc[1].bfill()\n\n# Çok seviyeli (MultiIndex) başlıklar oluştur\ndf.columns = pd.MultiIndex.from_tuples(zip(header1, header2))\n\n# İlk iki satırı kaldır ve veri setini sıfırla\ndf = df.iloc[2:].reset_index(drop=True)\n\n# İlk 3 sütun için tek seviyeli başlıklar oluştur\nfirst_three_headers = ['Yıl', 'İl Kodu', 'İl Adı']\n\n# Ana başlıklar ve alt başlıkları tanımla\nmain_headers = [\n    'Genel toplam', 'Okuma yazma bilmeyen', 'Okuma yazma bilen fakat bir okul bitirmeyen',\n    'İlkokul', 'İlköğretim', 'Ortaokul ve dengi meslek', 'Lise ve dengi meslek',\n    'Yüksekokul veya fakülte', 'Yüksek lisans', 'Doktora', 'Bilinmeyen'\n]\nsub_headers = ['Toplam', 'Erkek', 'Kadın']\n\n# Çok seviyeli başlıkları oluştur\nremaining_headers = [(main, sub) for main in main_headers for sub in sub_headers]\n\n# Tüm başlıkları birleştir\nfinal_headers = first_three_headers + remaining_headers[:df.shape[1] - len(first_three_headers)]\n\ndf.columns = pd.MultiIndex.from_tuples(\n    [(header, '') if isinstance(header, str) else header for header in final_headers]\n)\n\nprint(df.loc[df['Yıl'] == 2009])\n\n\n      Yıl İl Kodu            İl Adı Genel toplam                      \\\n                                          Toplam     Erkek     Kadın   \n81   2009     NaN           Türkiye     65049093  32612307  32436786   \n82   2009       1             Adana      1838483    914799    923684   \n83   2009       2          Adıyaman       514226    256220    258006   \n84   2009       3    Afyonkarahisar       632466    312888    319578   \n85   2009       4              Ağrı       453257    236508    216749   \n..    ...     ...               ...          ...       ...       ...   \n158  2009      77            Yalova       186120     93011     93109   \n159  2009      78           Karabük       202539    101087    101452   \n160  2009      79             Kilis       106205     52316     53889   \n161  2009      80          Osmaniye       416123    208100    208023   \n162  2009      81             Düzce       304102    151908    152194   \n\n    Okuma yazma bilmeyen                   \\\n                  Toplam   Erkek    Kadın   \n81               4672257  915054  3757203   \n82                148634   29472   119162   \n83                 64877   14374    50503   \n84                 46634    7243    39391   \n85                 65454   15413    50041   \n..                   ...     ...      ...   \n158                 6853    1197     5656   \n159                16355    3022    13333   \n160                11429    2476     8953   \n161                36910    7244    29666   \n162                18403    3211    15192   \n\n    Okuma yazma bilen fakat bir okul bitirmeyen  ... Yüksekokul veya fakülte  \\\n                                         Toplam  ...                   Kadın   \n81                                     13517214  ...                 1786379   \n82                                       398108  ...                   48596   \n83                                       135198  ...                    5811   \n84                                       124173  ...                   11334   \n85                                       188673  ...                    2408   \n..                                          ...  ...                     ...   \n158                                       30755  ...                    5630   \n159                                       34413  ...                    5071   \n160                                       27230  ...                    1478   \n161                                       93989  ...                    7797   \n162                                       59972  ...                    5868   \n\n    Yüksek lisans                 Doktora               Bilinmeyen           \\\n           Toplam   Erkek   Kadın  Toplam  Erkek  Kadın     Toplam    Erkek   \n81         279268  166285  112983   95500  61301  34199    3032457  1657575   \n82           5570    3173    2397    2044   1312    732      80015    45750   \n83            567     406     161     151    120     31      22234    12751   \n84           1610    1018     592     588    447    141      15534     8827   \n85            459     344     115     151    101     50      48889    26122   \n..            ...     ...     ...     ...    ...    ...        ...      ...   \n158           673     445     228     129     88     41      13696     7229   \n159           456     309     147     172    133     39       5506     3070   \n160           126      86      40      65     55     10       4504     2522   \n161           591     396     195     106     68     38      17466     9477   \n162           668     420     248     265    191     74      10764     5716   \n\n              \n       Kadın  \n81   1374882  \n82     34265  \n83      9483  \n84      6707  \n85     22767  \n..       ...  \n158     6467  \n159     2436  \n160     1982  \n161     7989  \n162     5048  \n\n[82 rows x 36 columns]\n\n\n\n\n🚀 R’de .RData formatında kaydetmek için aşağıdaki komutları kullanabilirsiniz:\nimport pandas as pd\n\n# Veri setini yükle ve tamamen boş sütunları kaldır\ndf = pd.read_excel('/home/mami/emu430/emu430-fall2024-team-education_atlas/data/yıllara_göre_egitim.xlsx')\ndf = df.dropna(axis=1, how='all')\n\n# Yılları ve indeks aralıklarını tanımla\nyears = list(range(2008, 2024))  # 2008'den 2023'e kadar\nindex_ranges = [(1 + i * 82, 1 + (i + 1) * 82) for i in range(len(years))]\n\n# Her yıl için alt veri çerçevelerini oluştur\nyearly_data = {}\nfor year, (start, end) in zip(years, index_ranges):\n    yearly_data[year] = df.iloc[start:end]\n\n# İlk birkaç yılın veri çerçevelerini kontrol et\nsample_years = {year: data.head(1) for year, data in list(yearly_data.items())[:3]}\n\n# İlk iki satırı başlık olarak kullan ve eksik değerleri doldur\nheader1 = df.iloc[0].bfill()\nheader2 = df.iloc[1].bfill()\n\n# Çok seviyeli (MultiIndex) başlıklar oluştur\ndf.columns = pd.MultiIndex.from_tuples(zip(header1, header2))\n\n# İlk iki satırı kaldır ve veri setini sıfırla\ndf = df.iloc[2:].reset_index(drop=True)\n\n# İlk 3 sütun için tek seviyeli başlıklar oluştur\nfirst_three_headers = ['Yıl', 'İl Kodu', 'İl Adı']\n\n# Ana başlıklar ve alt başlıkları tanımla\nmain_headers = [\n    'Genel toplam', 'Okuma yazma bilmeyen', 'Okuma yazma bilen fakat bir okul bitirmeyen',\n    'İlkokul', 'İlköğretim', 'Ortaokul ve dengi meslek', 'Lise ve dengi meslek',\n    'Yüksekokul veya fakülte', 'Yüksek lisans', 'Doktora', 'Bilinmeyen'\n]\nsub_headers = ['Toplam', 'Erkek', 'Kadın']\n\n# Çok seviyeli başlıkları oluştur\nremaining_headers = [(main, sub) for main in main_headers for sub in sub_headers]\n\n# Tüm başlıkları birleştir\nfinal_headers = first_three_headers + remaining_headers[:df.shape[1] - len(first_three_headers)]\n\ndf.columns = pd.MultiIndex.from_tuples(\n    [(header, '') if isinstance(header, str) else header for header in final_headers]\n)\n\n# Veri setini bir dosyaya kaydet\nimport pyreadr\n\n# Veri çerçevesini Rdata olarak kaydet\npyreadr.write_rds('data/education_data.RData', df)\n\n\nCode Details\n# Veri setini bir dosyaya kaydet\nimport pyreadr\n\n# Veri çerçevesini Rdata olarak kaydet\npyreadr.write_rds('education_data.RData', df)\n\n\n\n\nR’de kullanılmak üzere açıklama\n✅ Veri seti başarıyla kaydedildi: “data/education_data.RData”\nRdata\n\nVeri Seti Bağlantısı\nVeri setine buradan ulaşabilirsiniz.\nDescription:\n- The dataset’s column structure is inspected.\n- The first few rows are displayed to validate adjustments.\n\n\n\n\n✅ Summary and Results\nAfter the preprocessing steps:\n\nThe dataset was successfully loaded.\n\nYearly data partitioning was completed.\n\nMulti-level column headers were structured.\n\nSample data from selected years was displayed for verification.\n\n\n\n\n🚀 Next Steps\n\nMissing value analysis and filling strategies\n\nData normalization and scaling\n\nVisualization and analysis steps\n\nThis report provides a detailed overview of the data preprocessing steps and prepares the dataset for further analysis. 🚀\n\n\n\n\n\n\n Back to top"
  }
]